name: MLOPS Sanity Run Test

on:
  workflow_dispatch:
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write  # Allow commenting on PRs

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install black flake8

      - name: Run Black formatter
        run: |
          source .venv/bin/activate
          echo "# ðŸ§ª MLOps Sanity Test Report" > result.txt
          echo "## Code Formatting (Black)" >> result.txt
          black --check --diff train.py test/ >> result.txt 2>&1 || echo "Formatting issues found" >> result.txt
          echo "" >> result.txt

      - name: Run Flake8 linter
        run: |
          source .venv/bin/activate
          echo "## Linting Results (Flake8)" >> result.txt
          flake8 train.py test/ --max-line-length=88 --extend-ignore=E203,W503 >> result.txt 2>&1 || echo "Linting issues found" >> result.txt
          echo "" >> result.txt

      - name: Run training
        run: |
          source .venv/bin/activate
          python train.py > training.log
          echo "## Training Log" >> result.txt
          cat training.log >> result.txt
          echo "" >> result.txt

      - name: Run unit tests
        run: |
          source .venv/bin/activate
          echo "## Unit Test Results" >> result.txt
          python -m unittest discover test >> result.txt 2>&1 || echo "Test failures found" >> result.txt
          echo "" >> result.txt
          echo "Tests completed on $(date)" >> result.txt

      - name: Upload result and model artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: |
            model/model.pkl
            result.txt

      - name: Setup CML
        uses: iterative/setup-cml@v2

      - name: Comment test results with CML
        env:
          REPO_TOKEN: ${{ secrets.CML_TOKEN }}
        run: |
          source .venv/bin/activate
          cml comment update --publish result.txt